<%- layout("/layouts/boilerplate") %>

<div class="row mt-3">
  <div class="col col-8 offset-2">
    <h2>Create a New Listing</h2>
    <form
      action="/listing"
      method="post"
      novalidate
      class="needs-validation"
      enctype="multipart/form-data"
    >
      <div class="mb-3">
        <label for="title" class="form-label">Title</label>
        <input
          type="text"
          name="listing[title]"
          placeholder="Add a catchy Title"
          id="title"
          class="form-control"
          required
        />
        <div class="invalid-feedback">Title should be Valid</div>
      </div>
      <div class="mb-3">
        <label for="description" class="form-label">Description</label>
        <textarea
          type="text"
          name="listing[description]"
          placeholder="enter description"
          id="description"
          class="form-control"
          required
        ></textarea>
        <div class="invalid-feedback">Please Enter a short Description</div>
      </div>
      <div class="mb-3">
        <label for="image" class="form-label"
          >Upload&nbsp;&nbsp;Listing&nbsp;&nbsp;Image</label
        >
        <input
          type="file"
          name="listing[image][url]"
          id="image"
          class="form-control"
          required
        />
      </div>
      <div class="row">
        <div class="mb-3 col-md-4">
          <label for="price" class="form-label">Price</label
          ><input
            name="listing[price]"
            placeholder="1200"
            id="price"
            class="form-control"
            required
          />
          <div class="invalid-feedback">Price should be valid</div>
        </div>
        <div class="mb-3 col-md-8">
          <label for="country" class="form-label">Country</label>
          <input
            type="text"
            name="listing[country]"
            placeholder="Nepal"
            id="country"
            class="form-control"
            required
          />
          <div class="invalid-feedback">Country name should be valid</div>
        </div>
      </div>

      <div class="mb-3">
        <label for="location" class="form-label">Location</label>
        <input
          type="text"
          name="listing[location]"
          placeholder="Pokhara"
          id="location"
          class="form-control"
          required
        />
        <div class="invalid-feedback">Location should be valid</div>
      </div>
      <div class="mb-3">
        <label for="category" class="form-label">Category</label>
        <select class="form-control" id="category" name="listing[category]">
          <option value="Rooms" selected>Rooms</option>
          <option value="Iconic Cities">Iconic Cities</option>
          <option value="Mountains">Mountains</option>
          <option value="Castles">Castles</option>
          <option value="Amazing Pools">Amazing Pools</option>
          <option value="Camping">Camping</option>
          <option value="Farms">Farms</option>
          <option value="Arctic">Arctic</option>
          <option value="Domes">Domes</option>
          <option value="Boats">Boats</option>
        </select>
      </div>
      <button
        class="btn btn-dark submit-btn mb-2"
        type="submit"
        data-processing="Adding..."
      >
        <span class="btn-text">Add</span>
        <span
          class="spinner-border spinner-border-sm d-none"
          role="status"
          aria-hidden="true"
        ></span>
      </button>
    </form>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const forms = document.querySelectorAll("form.needs-validation");

    forms.forEach((form) => {
      form.addEventListener("submit", (e) => {
        // HTML5 validation
        if (!form.checkValidity()) {
          e.preventDefault();
          form.classList.add("was-validated");
          return;
        }

        // Find the submit button inside this form
        const btn = form.querySelector(".submit-btn");
        if (btn) {
          const spinner = btn.querySelector(".spinner-border");
          const btnText = btn.querySelector(".btn-text");

          // Disable button and show spinner with dynamic text
          btn.disabled = true;
          if (btnText) {
            const text = btn.getAttribute("data-processing") || "Processing...";
            btnText.textContent = text;
          }
          if (spinner) spinner.classList.remove("d-none");
        }
      });
    });
  });
</script>
